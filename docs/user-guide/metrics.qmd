---
title: Metrics
---

TODO Guide on what metrics are available and how to use them.

* [bias][modelskill.metrics.bias]
* [max_error][modelskill.metrics.max_error]
* [root_mean_squared_error (rmse)][modelskill.metrics.root_mean_squared_error]
* [urmse][modelskill.metrics.urmse]
* [mean_absolute_error (mae)][modelskill.metrics.mean_absolute_error]
* [mean_absolute_percentage_error (mape)][modelskill.metrics.mean_absolute_percentage_error]
* [kling_gupta_efficiency (kge)][modelskill.metrics.kling_gupta_efficiency]
* [nash_sutcliffe_efficiency (nse)][modelskill.metrics.nash_sutcliffe_efficiency]
* [r2 (r2=nse)][modelskill.metrics.r2]
* [model_efficiency_factor (mef)][modelskill.metrics.model_efficiency_factor]
* [wilmott][modelskill.metrics.willmott]
* [scatter_index (si)][modelskill.metrics.scatter_index]
* [scatter_index2][modelskill.metrics.scatter_index2]
* [corrcoef (cc)][modelskill.metrics.corrcoef]
* [spearmanr (rho)][modelskill.metrics.spearmanr]
* [lin_slope][modelskill.metrics.lin_slope]
* [hit_ratio][modelskill.metrics.hit_ratio]
* [explained_variance (ev)][modelskill.metrics.explained_variance]
* [peak_ratio (pr)][modelskill.metrics.peak_ratio]

Circular metrics (for directional data with units in degrees):

* [c_bias][modelskill.metrics.c_bias]
* [c_max_error][modelskill.metrics.c_max_error]
* [c_mean_absolute_error (c_mae)][modelskill.metrics.c_mean_absolute_error]
* [c_root_mean_squared_error (c_rmse)][modelskill.metrics.c_root_mean_squared_error]
* [c_unbiased_root_mean_squared_error (c_urmse)][modelskill.metrics.c_unbiased_root_mean_squared_error]

The names in parentheses are shorthand aliases for the different metrics.

Examples
--------
>>> obs = np.array([0.3, 2.1, -1.0])
>>> mod = np.array([0.0, 2.3, 1.0])
>>> bias(obs, mod)
np.float64(0.6333333333333332)
>>> max_error(obs, mod)
np.float64(2.0)
>>> rmse(obs, mod)
np.float64(1.173314393786536)
>>> urmse(obs, mod)
np.float64(0.9877021593352702)
>>> mae(obs, mod)
np.float64(0.8333333333333331)
>>> mape(obs, mod)
np.float64(103.17460317460316)
>>> nse(obs, mod)
np.float64(0.14786795048143053)
>>> r2(obs, mod)
np.float64(0.14786795048143053)
>>> mef(obs, mod)
np.float64(0.9231099877688299)
>>> si(obs, mod)
np.float64(0.8715019052958266)
>>> spearmanr(obs, mod)
np.float64(0.5)
>>> willmott(obs, mod)
np.float64(0.7484604452865941)
>>> hit_ratio(obs, mod, a=0.5)
np.float64(0.6666666666666666)
>>> ev(obs, mod)
np.float64(0.39614855570839064)